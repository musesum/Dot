sky.cell {
    go : (0...1=1)
    now :"average"
    
    _rule {
        on       : (0...1) //<-(cell.rule^on ? 0)
        changed  : (0...1=0)
        version  : (1...4=1)
        canvas0  : 0
        canvas1  : -1
        runOnce  : (0...1=0) // run only once
        mix2univ : (0...1=1) // when activated copy mix into universe
        mix {
            unflash : (0...3=0)
            plane   : (0...23=0)
            bits    : (1...8=8)
            op      : (1...2=1) // 1:copy 2:add
        }
        brush {
            size  : (1...32=1)
            index : (0...255=127)
        }
    }
    rule {
        null add average melt slide timetunnel
        gas drift zhabatinski fredkin pixsort
        modulo fade stroke copy zero one noise
    }:_rule
    
    rule {
        add {
            version     : (0...4=1)
            mix.plane   : (0...23=0)
        }
        average {
            version     : (1...4=1)
            mix.plane   : (0...23=1)
        }
        melt {
            version     : (1...4=1)
            canvas0     : -1
            canvas1     : -1
            mix.plane   : (0...23=5)
            unflash     : (0...3=1)
            brush.size  : (1...64=1)
        }
        slide {
            range     : (1...256=64)
            version   : (1...4=1)
            offset    : (x y z) <- (input.accel)
            mix.plane : (0...23=0)
        }
        timetunnel {
            version   : (1...8=6)
            mix.plane : (0...23=3)
            repeat    : (1...64=3)
        }
        gas {
            version     : (1...3=3)
            mix.plane   : (0...23=0)
            brush {
                size    : 1
                index   : 127
            }
        }
        drift {
            version     : (1...5=1)
            canvas0     : 0
            canvas1     : -1
            
            mix {
                plane   : (0...23=2)
                unflash : (0...3=1)
            }
            brush {
                size    : (1...64=12)
                index   : (0...255=127)
            }
        }
        zhabatinski {
            version     : (1...4=2)
            repeat      : (1...64=3)
            mix {
                plane   : (0...23=4)
                unflash : (0...3=1)
            }
        }
        fredkin {
            version     : (1...4=1)
            mix {
                plane   : (0...23=4)
                unflash : (0...3=1)
            }
        }
        pixsort {
            version     : (0...1=1)
            shift       : (1...8=8)
            canvas0     : 131036
            mix.plane   : (0...23=0)
        }
        modulo {
            version     : (1...6=2)
            mod         : (2...255=127)
            mix.plane   : (0...23=0)
        }
        fade {
            version     : (0...2)
            mix {plane  : (0...23=16)
                unflash : (0...3=0)
            }
        }
        stroke {
            one
            version   : (0...2)
            mix.plane : (0...23=2)
        }
        
        noise {runOnce : (0...1=1) bits : (1...7=1)}
        null  {runOnce : (0...1=1)}
        zero  {runOnce : (0...1=1) canvas0 : 0  <-(rules^canvas0) }
        nine  {runOnce : (0...1=1) canvas1 :-1  <-(rules^canvas1) }
    }

    mix {op {zero one equals plus}
        edit {
            plane : (0...23)  <-(rule^plane)
            page : (0...2)
            bits : (1...8=8)
            version : (0...1)
        }
    }
}
